/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ApiKeysRouteImport } from './routes/api-keys'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsProjectIdRouteImport } from './routes/projects.$projectId'
import { Route as ApiVerifyPasswordRouteImport } from './routes/api.verify-password'
import { Route as ApiSplatRouteImport } from './routes/api.$'
import { Route as ProjectsProjectIdEnvironmentsEnvIdRouteImport } from './routes/projects.$projectId_.environments.$envId'
import { ServerRoute as ApiServerRouteImport } from './routes/api'

const rootServerRouteImport = createServerRootRoute()

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiKeysRoute = ApiKeysRouteImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdRoute = ProjectsProjectIdRouteImport.update({
  id: '/projects/$projectId',
  path: '/projects/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiVerifyPasswordRoute = ApiVerifyPasswordRouteImport.update({
  id: '/api/verify-password',
  path: '/api/verify-password',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiSplatRoute = ApiSplatRouteImport.update({
  id: '/api/$',
  path: '/api/$',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdEnvironmentsEnvIdRoute =
  ProjectsProjectIdEnvironmentsEnvIdRouteImport.update({
    id: '/projects/$projectId_/environments/$envId',
    path: '/projects/$projectId/environments/$envId',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiServerRoute = ApiServerRouteImport.update({
  id: '/api',
  path: '/api',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/api-keys': typeof ApiKeysRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/api/$': typeof ApiSplatRoute
  '/api/verify-password': typeof ApiVerifyPasswordRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/projects/$projectId/environments/$envId': typeof ProjectsProjectIdEnvironmentsEnvIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/api-keys': typeof ApiKeysRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/api/$': typeof ApiSplatRoute
  '/api/verify-password': typeof ApiVerifyPasswordRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/projects/$projectId/environments/$envId': typeof ProjectsProjectIdEnvironmentsEnvIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/api-keys': typeof ApiKeysRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/api/$': typeof ApiSplatRoute
  '/api/verify-password': typeof ApiVerifyPasswordRoute
  '/projects/$projectId': typeof ProjectsProjectIdRoute
  '/projects/$projectId_/environments/$envId': typeof ProjectsProjectIdEnvironmentsEnvIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/api-keys'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/api/$'
    | '/api/verify-password'
    | '/projects/$projectId'
    | '/projects/$projectId/environments/$envId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/api-keys'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/api/$'
    | '/api/verify-password'
    | '/projects/$projectId'
    | '/projects/$projectId/environments/$envId'
  id:
    | '__root__'
    | '/'
    | '/api-keys'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/api/$'
    | '/api/verify-password'
    | '/projects/$projectId'
    | '/projects/$projectId_/environments/$envId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ApiKeysRoute: typeof ApiKeysRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  ApiSplatRoute: typeof ApiSplatRoute
  ApiVerifyPasswordRoute: typeof ApiVerifyPasswordRoute
  ProjectsProjectIdRoute: typeof ProjectsProjectIdRoute
  ProjectsProjectIdEnvironmentsEnvIdRoute: typeof ProjectsProjectIdEnvironmentsEnvIdRoute
}
export interface FileServerRoutesByFullPath {
  '/api': typeof ApiServerRoute
}
export interface FileServerRoutesByTo {
  '/api': typeof ApiServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api': typeof ApiServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api'
  id: '__root__' | '/api'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiServerRoute: typeof ApiServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api-keys': {
      id: '/api-keys'
      path: '/api-keys'
      fullPath: '/api-keys'
      preLoaderRoute: typeof ApiKeysRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId': {
      id: '/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/verify-password': {
      id: '/api/verify-password'
      path: '/api/verify-password'
      fullPath: '/api/verify-password'
      preLoaderRoute: typeof ApiVerifyPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api/$': {
      id: '/api/$'
      path: '/api/$'
      fullPath: '/api/$'
      preLoaderRoute: typeof ApiSplatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId_/environments/$envId': {
      id: '/projects/$projectId_/environments/$envId'
      path: '/projects/$projectId/environments/$envId'
      fullPath: '/projects/$projectId/environments/$envId'
      preLoaderRoute: typeof ProjectsProjectIdEnvironmentsEnvIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api': {
      id: '/api'
      path: '/api'
      fullPath: '/api'
      preLoaderRoute: typeof ApiServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ApiKeysRoute: ApiKeysRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  ApiSplatRoute: ApiSplatRoute,
  ApiVerifyPasswordRoute: ApiVerifyPasswordRoute,
  ProjectsProjectIdRoute: ProjectsProjectIdRoute,
  ProjectsProjectIdEnvironmentsEnvIdRoute:
    ProjectsProjectIdEnvironmentsEnvIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiServerRoute: ApiServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
