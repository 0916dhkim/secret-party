/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as ApiKeysRouteImport } from './routes/api-keys'
import { Route as AccountRouteImport } from './routes/account'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProjectsIndexRouteImport } from './routes/projects.index'
import { Route as ProjectsProjectIdIndexRouteImport } from './routes/projects.$projectId.index'
import { Route as ProjectsProjectIdEnvironmentsEnvironmentIdRouteImport } from './routes/projects.$projectId.environments.$environmentId'
import { ServerRoute as ApiServerRouteImport } from './routes/api'

const rootServerRouteImport = createServerRootRoute()

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiKeysRoute = ApiKeysRouteImport.update({
  id: '/api-keys',
  path: '/api-keys',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountRoute = AccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsIndexRoute = ProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdIndexRoute = ProjectsProjectIdIndexRouteImport.update({
  id: '/projects/$projectId/',
  path: '/projects/$projectId/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProjectsProjectIdEnvironmentsEnvironmentIdRoute =
  ProjectsProjectIdEnvironmentsEnvironmentIdRouteImport.update({
    id: '/projects/$projectId/environments/$environmentId',
    path: '/projects/$projectId/environments/$environmentId',
    getParentRoute: () => rootRouteImport,
  } as any)
const ApiServerRoute = ApiServerRouteImport.update({
  id: '/api',
  path: '/api',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/api-keys': typeof ApiKeysRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/environments/$environmentId': typeof ProjectsProjectIdEnvironmentsEnvironmentIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/api-keys': typeof ApiKeysRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/projects': typeof ProjectsIndexRoute
  '/projects/$projectId': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/environments/$environmentId': typeof ProjectsProjectIdEnvironmentsEnvironmentIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/account': typeof AccountRoute
  '/api-keys': typeof ApiKeysRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/projects/': typeof ProjectsIndexRoute
  '/projects/$projectId/': typeof ProjectsProjectIdIndexRoute
  '/projects/$projectId/environments/$environmentId': typeof ProjectsProjectIdEnvironmentsEnvironmentIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/account'
    | '/api-keys'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/projects'
    | '/projects/$projectId'
    | '/projects/$projectId/environments/$environmentId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/account'
    | '/api-keys'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/projects'
    | '/projects/$projectId'
    | '/projects/$projectId/environments/$environmentId'
  id:
    | '__root__'
    | '/'
    | '/account'
    | '/api-keys'
    | '/dashboard'
    | '/login'
    | '/signup'
    | '/projects/'
    | '/projects/$projectId/'
    | '/projects/$projectId/environments/$environmentId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AccountRoute: typeof AccountRoute
  ApiKeysRoute: typeof ApiKeysRoute
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
  ProjectsIndexRoute: typeof ProjectsIndexRoute
  ProjectsProjectIdIndexRoute: typeof ProjectsProjectIdIndexRoute
  ProjectsProjectIdEnvironmentsEnvironmentIdRoute: typeof ProjectsProjectIdEnvironmentsEnvironmentIdRoute
}
export interface FileServerRoutesByFullPath {
  '/api': typeof ApiServerRoute
}
export interface FileServerRoutesByTo {
  '/api': typeof ApiServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api': typeof ApiServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api'
  id: '__root__' | '/api'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiServerRoute: typeof ApiServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/api-keys': {
      id: '/api-keys'
      path: '/api-keys'
      fullPath: '/api-keys'
      preLoaderRoute: typeof ApiKeysRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/': {
      id: '/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof ProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId/': {
      id: '/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof ProjectsProjectIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/projects/$projectId/environments/$environmentId': {
      id: '/projects/$projectId/environments/$environmentId'
      path: '/projects/$projectId/environments/$environmentId'
      fullPath: '/projects/$projectId/environments/$environmentId'
      preLoaderRoute: typeof ProjectsProjectIdEnvironmentsEnvironmentIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api': {
      id: '/api'
      path: '/api'
      fullPath: '/api'
      preLoaderRoute: typeof ApiServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AccountRoute: AccountRoute,
  ApiKeysRoute: ApiKeysRoute,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
  ProjectsIndexRoute: ProjectsIndexRoute,
  ProjectsProjectIdIndexRoute: ProjectsProjectIdIndexRoute,
  ProjectsProjectIdEnvironmentsEnvironmentIdRoute:
    ProjectsProjectIdEnvironmentsEnvironmentIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiServerRoute: ApiServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
